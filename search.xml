<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Github + Hexo + Butterfly 搭建博客（四） - Butterfly 主题！</title>
      <link href="/2024/06/05/How-to-Start-a-Personal-Blog-04/"/>
      <url>/2024/06/05/How-to-Start-a-Personal-Blog-04/</url>
      
        <content type="html"><![CDATA[<h1 id="配置-Hexo"><a href="#配置-Hexo" class="headerlink" title="配置 Hexo"></a>配置 Hexo</h1><p>在安装 <code>Butterfly</code> 主题之前，先配置好 <code>Hexo</code> 。配置文件是 <code>&lt;folder&gt;</code> 下的 <code>_config.yml</code> ，可参考 <a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a> 。</p><div class="table-container"><table><thead><tr><th>Site</th><th>URL</th><th>Writing</th><th>Category &amp; Tag</th><th>Extensions</th><th>Deployment</th></tr></thead><tbody><tr><td><strong>title</strong></td><td><strong>url</strong></td><td>new_post_name</td><td>default_category</td><td><strong>theme</strong></td><td><strong>deploy</strong></td></tr><tr><td><strong>subtitle</strong></td><td>permalink</td><td>default_layout</td><td>category_map</td><td></td><td></td></tr><tr><td><strong>description</strong></td><td>permalink_defaults</td><td><strong>auto_spacing</strong></td><td>tag_map</td><td></td><td></td></tr><tr><td><strong>keywords</strong></td><td></td><td>titlecase</td><td></td><td></td><td></td></tr><tr><td><strong>author</strong></td><td></td><td>external_link</td><td></td><td></td><td></td></tr><tr><td><strong>language</strong></td><td></td><td>filename_case</td><td></td><td></td><td></td></tr><tr><td><strong>timezone</strong></td><td></td><td>render_drafts</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>post_asset_folder</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>relative_link</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>future</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td><strong>syntax_highlighter</strong></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td><strong>highlight</strong></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td><strong>prismjs</strong></td><td></td><td></td></tr></tbody></table></div><h2 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h2><div class="table-container"><table><thead><tr><th style="text-align:center">Setting</th><th style="text-align:center">Description</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">您网站的标题</td></tr><tr><td style="text-align:center">subtitle</td><td style="text-align:center">您网站的副标题</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">您网站的描述</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">您网站的关键字。支持多个值。</td></tr><tr><td style="text-align:center">author</td><td style="text-align:center">你的名字</td></tr><tr><td style="text-align:center">language</td><td style="text-align:center">您网站的语言。</td></tr><tr><td style="text-align:center">timezone</td><td style="text-align:center">您网站的时区。</td></tr></tbody></table></div><p>其中 <code>language</code> 要显示中文的话值为 <code>zh-CN</code> ， <code>timezone</code> 的值必须为 <code>Asia/Shanghai</code>，与 <code>Hexo</code> 时区一致，否则 <code>Hexo</code> 会运行失败。</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><div class="table-container"><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td>url</td><td>您网站的 URL，必须以 <code>http://</code> 或 <code>https://</code> 开头。</td></tr></tbody></table></div><h2 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h2><div class="table-container"><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td>theme</td><td>主题名称。</td></tr></tbody></table></div><h1 id="安装-Butterfly"><a href="#安装-Butterfly" class="headerlink" title="安装 Butterfly"></a>安装 Butterfly</h1><p><code>hexo-theme-butterfly</code> 是基于 <code>hexo-theme-melody</code> 的基础上进行开发的，使用 <code>git</code> 安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>如果你没有 <code>pug</code> 以及 <code>stylus</code> 的渲染器，请下载安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>修改 Hexo 根目录下的 <code>_config.yml</code> ，把主题改为 <code>butterfly</code> ：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> Github + Hexo + Butterfly 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo + Butterfly 搭建博客（三） - Hexo 部署！</title>
      <link href="/2024/06/05/How-to-Start-a-Personal-Blog-03/"/>
      <url>/2024/06/05/How-to-Start-a-Personal-Blog-03/</url>
      
        <content type="html"><![CDATA[<h1 id="SSH-Key"><a href="#SSH-Key" class="headerlink" title="SSH Key"></a>SSH Key</h1><p>如果你的 <code>SSH Key</code> 未安装，执行以下命令（ <code>@example.com</code> 是 <code>Github</code> 账户的注册邮箱）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>执行命令后，<code>ENTER</code> 三次后出现 <code>id_rsa.pub</code> 文件的路径，使用记事本打开 <code>id_rsa.pub</code> 文件并复制其中的内容。</p><h1 id="Github-仓库"><a href="#Github-仓库" class="headerlink" title="Github 仓库"></a>Github 仓库</h1><p>创建名为 <code>x.github.io</code> 的新仓库，<code>X</code> 为 <code>Gxithub</code> 账户名。</p><p><img src="20240605-1.png" alt></p><h1 id="Github-新建-SSH-key"><a href="#Github-新建-SSH-key" class="headerlink" title="Github 新建 SSH key"></a>Github 新建 SSH key</h1><p>打开 <code>Github Settings</code> 中的 <code>SSH and GPG keys</code>，点击新建一个 <code>SSH Key</code> 。</p><p><img src="20240605-2.png" alt></p><p>其中 <code>Title</code> 随意, <code>Key</code> 是 <code>id_rsa.pub</code> 文件的内容。</p><p><img src="20240605-3.png" alt></p><p>使用以下命令来测试 SSH 连接是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现以下信息代表成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi X! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h1 id="部署-Hexo"><a href="#部署-Hexo" class="headerlink" title="部署 Hexo"></a>部署 Hexo</h1><p>首先确认是否为 <code>master</code> 分支，如果为 <code>main</code> 分支，请在仓库 <code>Setting</code> 更改。</p><p><img src="20240605-4.png" alt></p><p>打开 <code>&lt;folder&gt;</code> 文件夹下的 <code>_config.yml</code> 文件，修改 <code>url</code> 和 <code>deploy</code> ，<code>repo</code> 后填 <code>Code &gt; SSH</code> 的内容。</p><p><img src="20240605-5.png" alt></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://x.github.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:X/x.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>第一次需要安装 <code>git</code> 部署方式依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>使用如下命令清除缓存文件和已生成的静态文件、重新生成静态文件并启动服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo c</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>访问 <a href="https://x.github.io/">https://x.github.io/</a> ，如果看到 <a href="http://localhost:4000/">http://localhost:4000/</a> 相同的界面就证明你的部署成功了！</p><p><img src="20240605-6.png" alt></p><p>如果访问 <a href="https://x.github.io/">https://x.github.io/</a> 部署或者修改没有生效属于正常现象，因为 <code>Github</code> 将仓库代码文件部署到服务器上需要时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>日常撰写文章想要实时看到文章效果的话，使用 <code>hexo serve</code> 。 </p><p><code>hexo clean</code> 、 <code>hexo generate</code> 和 <code>hexo deploy</code> 在修改配置、上传文章中经常使用。</p><p>注意修改配置之后必须要 <code>hexo clean</code> ，上传文章不必要。</p>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> Github + Hexo + Butterfly 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo + Butterfly 搭建博客（二） - Hexo 启动！</title>
      <link href="/2024/06/05/How-to-Start-a-Personal-Blog-02/"/>
      <url>/2024/06/05/How-to-Start-a-Personal-Blog-02/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-概述"><a href="#Hexo-概述" class="headerlink" title="Hexo 概述"></a>Hexo 概述</h1><p><code>Hexo</code> 是一款备受欢迎的博客框架，使用 <a href>Markdown</a>（或其他标记语言）作为内容创作的基础。</p><h1 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h1><p>要开始安装 <code>Hexo</code>，你需要先确保你的电脑中安装了下列应用程序：</p><ul><li><code>Node.js</code> ，一个流行的 JavaScript 运行环境，用于服务器端脚本编程。Hexo 依赖于 <code>Node.js</code>，因此你需要先安装它。建议的版本不低于 <code>10.13</code> ，但推荐使用 <code>12.0</code> 或以上版本以获得最佳性能和兼容性。你可以从 <code>Node.js</code> 的 <a href="http://nodejs.org/">官方网站</a> 下载并安装适合你操作系统的版本。</li><li><code>npm</code>（node package manager）是 <code>Node.js</code> 的包管理器，用于 node 插件管理（包括安装、卸载、管理依赖等），需要我们使用 <code>nmp</code> 下载 <code>Hexo</code> 框架。</li><li><code>Git</code> ，一个开源的分布式版本控制系统，用于高效地处理任何或小或大的项目。虽然 Hexo 不直接依赖 Git 来运行，但 Git 对于管理你的博客项目、主题和插件非常有用。你可以从 Git 的 <a href="http://git-scm.com/">官方网站</a> 下载并安装 Git。</li></ul><p>如果你已经安装了以上的应用程序，那么你可以直接开始安装 Hexo 了。如果你还没有安装，请访问对应的官方网站并按照安装指示进行安装。一旦你完成了这些准备工作，你就可以开始使用 Hexo 来搭建你的博客了。</p><p>要查看 <code>node</code> 的版本，你可以在命令行或终端中运行以下命令，我的版本是 <code>v16.15.1</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p>要查看 <code>npm</code> 的版本，你可以在命令行或终端中运行以下命令，我的版本是 <code>9.1.2</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm --version</span><br></pre></td></tr></table></figure><p>要查看 <code>Git</code> 的版本，你可以在命令行或终端中运行以下命令，我的版本是 <code>2.35.1</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><p>所有必备的应用程序安装完成后，即可使用 <code>npm</code> 安装 <code>Hexo</code> 。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>要查看 <code>Hexo</code> 的版本，你可以在命令行或终端中运行以下命令，我的版本是 <code>4.3.1</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><h1 id="Hexo-建站"><a href="#Hexo-建站" class="headerlink" title="Hexo 建站"></a>Hexo 建站</h1><p>安装 <code>Hexo</code> 完成后，请执行下列命令，<code>Hexo</code> 将会在指定文件夹 <code>&lt;folder&gt;</code> 中新建所需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt; </span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt; </span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹 <code>&lt;folder&gt;</code> 的目录如下： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">. </span><br><span class="line">├── _config.yml </span><br><span class="line">├── package.json </span><br><span class="line">├── scaffolds </span><br><span class="line">├── <span class="built_in">source</span> </span><br><span class="line">|    ├── _drafts </span><br><span class="line">|    └── _posts </span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><ul><li><code>_config.yml</code> ：是 <code>Hexo</code> 的配置文件，包含网站的大部分配置信息，<strong>这部分可以等到我们配置主题的时候一并修改</strong>，详细见 <a href="https://hexo.io/zh-cn/docs/configuration">官方网站</a> 。</li><li><code>package.json</code> ：这个文件包含了应用程序的元信息，比如应用的名称、版本、依赖项等。对于 Hexo 而言，这个文件还包含了用于启动和构建博客的命令。</li><li><code>scaffolds</code> ：这个文件夹包含了 <code>Hexo</code> 在创建新文章或页面时使用的模板文件。你可以在这个文件夹中修改模板，以自定义新文件的默认内容。当你创建一个新文章时，<code>Hexo</code> 会从 <code>scaffolds/post.md</code> 文件中读取模板内容，并据此创建一个新的 <code>Markdown</code> 文件。</li><li><code>source</code> ：这个文件夹是存放用户资源的地方，包含了博客的所有内容，比如 <code>Markdown</code> 文章、图片、<code>CSS</code> 文件等。</li><li><code>themes</code> ：这个文件夹包含了 Hexo 主题。你可以从 Hexo 的官方主题仓库或其他来源获取主题，并将其放置在 <code>themes</code> 文件夹中。然后，你只需在 <code>_config.yml</code> 文件中指定要使用的主题名称，Hexo 就会根据这个主题来生成你的博客页面。</li></ul><h1 id="Hexo-指令"><a href="#Hexo-指令" class="headerlink" title="Hexo 指令"></a>Hexo 指令</h1><p>在建站的时候，我们使用了 <code>init</code> 指令。除此之外， <code>Hexo</code> 还有许多指令需要我们熟知，详情见<a href="https://hexo.io/zh-cn/docs/commands">官方网站</a>。</p><div class="table-container"><table><thead><tr><th style="text-align:center">instruction</th><th style="text-align:center">command</th><th>description</th><th style="text-align:center">options</th></tr></thead><tbody><tr><td style="text-align:center">init</td><td style="text-align:center">hexo init [folder]</td><td>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">new</td><td style="text-align:center">hexo new [layout] \<title></title></td><td>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <code>_config.yml</code> 中的 <code>default_layout</code> 参数。<br>如果标题包含空格的话，像这样 <code>hexo new &quot;post title with whitespace&quot;</code> 使用引号括起来。</td><td style="text-align:center"><code>-p</code><br><code>-r</code><br><code>-s</code></td></tr><tr><td style="text-align:center">generate</td><td style="text-align:center">hexo generate / hexo g</td><td>生成静态文件。</td><td style="text-align:center"><code>-d</code><br><code>-w</code><br><code>b</code><br><code>-f</code><br><code>-c</code></td></tr><tr><td style="text-align:center">publish</td><td style="text-align:center">hexo publish [layout] \<filename></filename></td><td>发表草稿。</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">server</td><td style="text-align:center">hexo server / hexo s</td><td>启动服务器。默认情况下，访问网址为：<code>http://localhost:4000/</code> 。</td><td style="text-align:center"><code>-p</code><br><code>-s</code><br><code>-l</code></td></tr><tr><td style="text-align:center">deploy</td><td style="text-align:center">hexo deploy / hexo d</td><td>部署网站。</td><td style="text-align:center"><code>-g</code></td></tr><tr><td style="text-align:center">render</td><td style="text-align:center">hexo render \<file1> [file2] …</file1></td><td>渲染文件。</td><td style="text-align:center"><code>-o</code></td></tr><tr><td style="text-align:center">migrate</td><td style="text-align:center">hexo migrate \<type></type></td><td>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">clean</td><td style="text-align:center">hexo clean</td><td>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">list</td><td style="text-align:center">hexo list \<type></type></td><td>列出网站数据。</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">version</td><td style="text-align:center">hexo version</td><td>显示 Hexo 版本。</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">config</td><td style="text-align:center">hexo config [key] [value]</td><td>列出网站的配置（<code>_config.yml</code>）。如果指定了 <code>key</code>，则只展示配置中对应 <code>key</code> 的值；如果同时指定了 <code>key</code> 和 <code>value</code>，则将配置中对应的 <code>key</code> 的值修改为 <code>value</code>。</td><td style="text-align:center">-</td></tr></tbody></table></div><h1 id="Hexo-启动"><a href="#Hexo-启动" class="headerlink" title="Hexo 启动"></a>Hexo 启动</h1><p>使用如下命令生成静态文件并启动服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>访问网址 <code>http://localhost:4000</code> 如果可以看到欢迎界面证明你成功安装并启动了 <code>Hexo</code> ！</p><p><img src="20240605-1.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> Github + Hexo + Butterfly 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo + Butterfly 搭建博客（一） - 欢迎！</title>
      <link href="/2024/06/05/How-to-Start-a-Personal-Blog-01/"/>
      <url>/2024/06/05/How-to-Start-a-Personal-Blog-01/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到我的博客搭建系列~</p><p>亲爱的读者，您好！我非常荣幸您能点开这份博客搭建指南，同我一起开启这次有趣的个人博客建设之旅。</p><p>在数字化时代，博客已成为个人表达、知识分享、学习交流的重要平台。通过博客，我们可以将自己的想法、心得、经验分享给全世界，也可以从他人的博客中汲取知识，拓宽视野。</p><p>在接下来的文章中，我将详细阐述如何利用 <code>GitHub</code> 这个强大的代码托管平台，结合 <code>Hexo</code> 框架和 <code>Butterfly</code> 主题，搭建出属于自己的个性化博客。</p><p><a href="https://github.com">GitHub</a> 作为全球最大的代码托管平台，不仅提供了强大的版本控制功能，还提供了丰富的资源和社区支持，使得开发者能够轻松地进行项目协作和代码分享。</p><p><img src="20240605-1.png" alt></p><p><a href="https://hexo.io/zh-cn/">Hexo</a> 则是一款基于 <code>Node.js</code> 的静态博客框架，具有简洁易用、功能丰富、性能优异等特点。</p><p><img src="20240605-2.png" alt></p><p><a href="https://butterfly.js.org/">Butterfly</a> 作为 <code>Hexo</code> 的一个精美主题，以其优雅的界面设计和丰富的功能配置，赢得了广大用户的喜爱。</p><p><img src="20240605-3.png" alt></p><p>在接下来的文章中，我将从环境搭建、 <code>Hexo</code> 安装、主题配置、内容撰写、部署上线等方面，一步步指导您如何搭建一个属于自己的博客网站。无论是技术小白还是资深开发者，只要您有一颗学习的心，都能在这个过程中收获满满。</p><p>让我们一起踏上这次建站之旅吧！相信在不久的将来，您也能拥有一个属于自己的独特博客网站，与世界分享您的精彩故事。</p>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
          <category> Github + Hexo + Butterfly 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
